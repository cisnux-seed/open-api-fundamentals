openapi: 3.0.3
info:
  title: Todolist RESTful API
  description: OpenAPI for Todolist RESTful API
  version: 1.0.0
  termsOfService: https://www.cisnux.dev
  contact:
    name: Fajra Risqulla
    email: fajrarisqulla@gmail.com
    url: https://www.cisnux.dev
  license:
    name: APACHE 2.0
    url: https://www.apache.org/Licenses/LICENSE-2.Q
servers:
  - url: 'https://{environment}.cisnux.com/api/v1'
    description: Todolist RESTful API server
    variables:
      environment:
        description: Server Environment
        default: dev
        enum:
          - dev
          - qa
          - prod
externalDocs:
  description: Portfolio
  url: https://www.cisnux.com/portfolio
paths:
  /todolist:
    get:
      security:
        - jwt: []
      tags:
        - Todolist
      summary: Get all todolist
      description: Get all active todolist by default
      parameters:
        - name: include_done
          in: query
          required: false
          description: to include done todolist
          schema:
            default: false
            type: boolean
            nullable: true
        - name: name
          in: query
          required: false
          description: to filter by name
          schema:
            type: string
            nullable: false
            minLength: 1
            maxLength: 100
          examples:
            java:
              value: java example name
              description: first example name
            php:
              value: php example name
              description: second example name
      responses:
        200:
          description: get all todolist
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        default: 200
                      message:
                        type: string
                        nullable: false
                  data:
                    type: array
                    nullable: false
                    items:
                      $ref: "#/components/schemas/added_or_updated_todolist"
              examples:
                success:
                  description: successfully get all todolist
                  value:
                    meta:
                      code: 200
                      message: success
                    data:
                      - id: 1
                        name: Java
                        priority: 3
                      - id: 2
                        name: PHP
                        priority: 4
        401:
          description: failed to get all todolist cause user is unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 401
                      message: unauthenticated
    post:
      security:
        - jwt: []
      tags:
        - Todolist
      summary: Create new todolist
      description: Create new todolist at database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/add_or_update_todolist"
            examples:
              java:
                description: Example create todolist java
                value:
                  name: Java
                  priority: 3
                  tags:
                    - Java
                    - Programming
              php:
                description: Example create todolist php
                value:
                  name: PHP
                  priority: 2
                  tags:
                    - PHP
                    - Programming
      responses:
        201:
          description: success response sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        default: 200
                      message:
                        type: string
                        nullable: false
                  data:
                    $ref: "#/components/schemas/added_or_updated_todolist"
              examples:
                success:
                  description: Successfully add todolist to database
                  value:
                    meta:
                      code: 200
                      message: success
                    data:
                      id: 1
                      name: Java
                      priority: 3
        400:
          description: error response sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        default: 200
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  description: failed to add the todolist
                  value:
                    meta:
                      code: 400
                      message: name must be filled
        401:
          description: failed to add todolist cause user is unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 401
                      message: unauthenticated
  /todolist/{todolistId}:
    get:
      security:
        - jwt: []
      tags:
        - Todolist
      summary: Get todolist detail
      description: Get todolist detail by todolist id
      parameters:
        - $ref: "#/components/parameters/todolist_id"
      responses:
        200:
          description: get todolist detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        default: 200
                      message:
                        type: string
                        nullable: false
                  data:
                    $ref: "#/components/schemas/todolist_detail"
              examples:
                success:
                  description: successfully get the todolist detail by todolist id
                  value:
                    meta:
                      code: 200
                      message: success
                    data:
                      id: 1
                      name: Java
                      priority: 3
                      tags:
                        - Programming
                        - Java
        404:
          description: cuz todolist id is not found so can't get the todolist detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 404
                      message: todolist id '1' is not found
        401:
          description: failed to get todolist detail cause user is unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 401
                      message: unauthenticated
    put:
      security:
        - jwt: []
      tags:
        - Todolist
      summary: Update existing todolist
      description: Update existing todolist by todolist id
      parameters:
        - $ref: "#/components/parameters/todolist_id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/add_or_update_todolist"
            examples:
              java:
                description: Example create todolist java
                value:
                  name: Java
                  priority: 3
                  tags:
                    - Java
                    - Programming
              php:
                description: Example create todolist php
                value:
                  name: PHP
                  priority: 2
                  tags:
                    - PHP
                    - Programming
      responses:
        200:
          description: success response sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        default: 200
                      message:
                        type: string
                        nullable: false
                  data:
                    $ref: "#/components/schemas/added_or_updated_todolist"
              examples:
                success:
                  description: Successfully update todolist by todolist id
                  value:
                    meta:
                      code: 200
                      message: success
                    data:
                      id: 1
                      name: Java
                      priority: 3
        400:
          description: error response sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        default: 200
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  description: failed to add the todolist
                  value:
                    meta:
                      code: 400
                      message: name must be filled
        401:
          description: failed to update todolist by todolist id cause user is unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 401
                      message: unauthenticated
        404:
          description: cuz todolist id is not found so can't update the todolist
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 404
                      message: todolist id '1' is not found
    delete:
      security:
        - jwt: []
      tags:
        - Todolist
      summary: Delete existing todolist
      description: Delete existing todolist by todolist id
      parameters:
        - $ref: "#/components/parameters/todolist_id"
      responses:
        200:
          description: delete todolist by todolist id
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        default: 200
                      message:
                        type: string
                        nullable: false
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        nullable: false
              examples:
                success:
                  description: successfully delete the todolist by todolist id
                  value:
                    meta:
                      code: 200
                      message: success
                    data:
                      id: 1
        404:
          description: cuz todolist id is not found so can't delete the todolist
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 404
                      message: todolist id '1' is not found
        401:
          description: failed to delete todolist cause user is unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                        nullable: false
              examples:
                error:
                  value:
                    meta:
                      code: 401
                      message: unauthenticated
# set security to all paths
#security:
#  - jwt:
#      -
components:
  securitySchemes:
    jwt:
      type: apiKey
      description: Please insert token with bearer into field
      name: Authorization
      in: header
  parameters:
    todolist_id:
      name: todolistId
      required: true
      in: path
      description: todolist id to get detail of todolist
      schema:
        type: string
        nullable: false
        minLength: 1
        maxLength: 100
      examples:
        java:
          description: first example
          value: 1
        php:
          description: second example
          value: 2
  schemas:
    add_or_update_todolist:
      type: object
      required:
        - name
        - priority
      properties:
        name:
          type: string
          minLength: 1
        priority:
          type: integer
          format: int32
          default: 1
        tags:
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1
    added_or_updated_todolist:
      type: object
      properties:
        id:
          type: string
          nullable: false
        name:
          type: string
          nullable: false
          minLength: 1
        priority:
          type: integer
          format: int32
          default: 1
          nullable: false
    todolist_detail:
      type: object
      properties:
        id:
          type: string
          nullable: false
        name:
          type: string
          nullable: false
          minLength: 1
        priority:
          type: integer
          format: int32
          default: 1
          nullable: false
        tags:
          type: array
          minItems: 1
          nullable: false
          items:
            type: string
            minLength: 1
            maxLength: 100
            nullable: false